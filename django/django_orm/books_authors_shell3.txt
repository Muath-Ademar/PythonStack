Last login: Thu May 16 07:00:53 on ttys006
macbookpro@Macbooks-MacBook-Pro ~ % cd Desktop
macbookpro@Macbooks-MacBook-Pro Desktop % cd python_stack 
macbookpro@Macbooks-MacBook-Pro python_stack % cd my_environments 
macbookpro@Macbooks-MacBook-Pro my_environments % source djangoPy3Env/bin/activate
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro my_environments % cd ..
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro python_stack % cd django 
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro django % cd django_intro 
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro django_intro % django-admin startproject books_authors_proj
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro django_intro % cd books_authors_proj
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro books_authors_proj % python manage.py startapp books_authors_app
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro books_authors_proj % python manage.py runserver
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).

You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.
Run 'python manage.py migrate' to apply them.
May 16, 2024 - 04:20:06
Django version 5.0.6, using settings 'books_authors_proj.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.

[16/May/2024 04:20:12] "GET / HTTP/1.1" 200 42
^C%                                                                             (djangoPy3Env) macbookpro@Macbooks-MacBook-Pro books_authors_proj % python manage.py makemigrations
Migrations for 'books_authors_app':
  books_authors_app/migrations/0001_initial.py
    - Create model Book
    - Create model Author
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro books_authors_proj % python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying books_authors_app.0001_initial... OK
  Applying sessions.0001_initial... OK
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro books_authors_proj % python manage.py shell
Python 3.12.3 (v3.12.3:f6650f9ad7, Apr  9 2024, 08:18:47) [Clang 13.0.0 (clang-1300.0.29.30)]
Type 'copyright', 'credits' or 'license' for more information
IPython 8.24.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import Book, Author

In [2]: Book.objects.create(title='C Sharp')
Out[2]: <Book: Book object (1)>

In [3]: Book.objects.create(title='Java')
Out[3]: <Book: Book object (2)>

In [4]: Book.objects.create(title='Python')
Out[4]: <Book: Book object (3)>

In [5]: Book.objects.create(title='PHP')
Out[5]: <Book: Book object (4)>

In [6]: Book.objects.create(title='Ruby')
Out[6]: <Book: Book object (5)>

In [7]: Author.objects.create(first_name='Jane', last_name='Austen')
Out[7]: <Author: Author object (1)>

In [8]: Author.objects.create(first_name='Emily', last_name='Dickinson')
Out[8]: <Author: Author object (2)>

In [9]: Author.objects.create(first_name='Fyodor', last_name='Dostoevsky')
Out[9]: <Author: Author object (3)>

In [10]: Author.objects.create(first_name='William', last_name='Shakespeare')
Out[10]: <Author: Author object (4)>

In [11]: Author.objects.create(first_name='Lau', last_name='Tzu')
Out[11]: <Author: Author object (5)>

In [12]: exit()
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro books_authors_proj % python manage.py makemigrations
Migrations for 'books_authors_app':
  books_authors_app/migrations/0002_author_notes.py
    - Add field notes to author
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro books_authors_proj % python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  Applying books_authors_app.0002_author_notes... OK
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro books_authors_proj % python manage.py shell
Python 3.12.3 (v3.12.3:f6650f9ad7, Apr  9 2024, 08:18:47) [Clang 13.0.0 (clang-1300.0.29.30)]
Type 'copyright', 'credits' or 'license' for more information
IPython 8.24.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import Book, Author

In [2]: c=Book.objects.get(title='C Sharp')

In [3]: c.title='C#'

In [4]: c.save()

In [5]: shakespeare = Author.objects.get(first_name='William')
---------------------------------------------------------------------------
OperationalError                          Traceback (most recent call last)
File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:105, in CursorWrapper._execute(self, sql, params, *ignored_wrapper_args)
    104 else:
--> 105     return self.cursor.execute(sql, params)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/sqlite3/base.py:329, in SQLiteCursorWrapper.execute(self, query, params)
    328 query = self.convert_query(query, param_names=param_names)
--> 329 return super().execute(query, params)

OperationalError: no such column: books_authors_app_author.created_cat

The above exception was the direct cause of the following exception:

OperationalError                          Traceback (most recent call last)
Cell In[5], line 1
----> 1 shakespeare = Author.objects.get(first_name='William')

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/manager.py:87, in BaseManager._get_queryset_methods.<locals>.create_method.<locals>.manager_method(self, *args, **kwargs)
     85 @wraps(method)
     86 def manager_method(self, *args, **kwargs):
---> 87     return getattr(self.get_queryset(), name)(*args, **kwargs)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/query.py:645, in QuerySet.get(self, *args, **kwargs)
    643     limit = MAX_GET_RESULTS
    644     clone.query.set_limits(high=limit)
--> 645 num = len(clone)
    646 if num == 1:
    647     return clone._result_cache[0]

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/query.py:382, in QuerySet.__len__(self)
    381 def __len__(self):
--> 382     self._fetch_all()
    383     return len(self._result_cache)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/query.py:1928, in QuerySet._fetch_all(self)
   1926 def _fetch_all(self):
   1927     if self._result_cache is None:
-> 1928         self._result_cache = list(self._iterable_class(self))
   1929     if self._prefetch_related_lookups and not self._prefetch_done:
   1930         self._prefetch_related_objects()

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/query.py:91, in ModelIterable.__iter__(self)
     88 compiler = queryset.query.get_compiler(using=db)
     89 # Execute the query. This will also fill compiler.select, klass_info,
     90 # and annotations.
---> 91 results = compiler.execute_sql(
     92     chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
     93 )
     94 select, klass_info, annotation_col_map = (
     95     compiler.select,
     96     compiler.klass_info,
     97     compiler.annotation_col_map,
     98 )
     99 model_cls = klass_info["model"]

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/sql/compiler.py:1562, in SQLCompiler.execute_sql(self, result_type, chunked_fetch, chunk_size)
   1560     cursor = self.connection.cursor()
   1561 try:
-> 1562     cursor.execute(sql, params)
   1563 except Exception:
   1564     # Might fail for server-side cursors (e.g. connection closed)
   1565     cursor.close()

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:122, in CursorDebugWrapper.execute(self, sql, params)
    120 def execute(self, sql, params=None):
    121     with self.debug_sql(sql, params, use_last_executed_query=True):
--> 122         return super().execute(sql, params)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:79, in CursorWrapper.execute(self, sql, params)
     78 def execute(self, sql, params=None):
---> 79     return self._execute_with_wrappers(
     80         sql, params, many=False, executor=self._execute
     81     )

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:92, in CursorWrapper._execute_with_wrappers(self, sql, params, many, executor)
     90 for wrapper in reversed(self.db.execute_wrappers):
     91     executor = functools.partial(wrapper, executor)
---> 92 return executor(sql, params, many, context)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:100, in CursorWrapper._execute(self, sql, params, *ignored_wrapper_args)
     98     warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)
     99 self.db.validate_no_broken_transaction()
--> 100 with self.db.wrap_database_errors:
    101     if params is None:
    102         # params default might be backend specific.
    103         return self.cursor.execute(sql)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/utils.py:91, in DatabaseErrorWrapper.__exit__(self, exc_type, exc_value, traceback)
     89 if dj_exc_type not in (DataError, IntegrityError):
     90     self.wrapper.errors_occurred = True
---> 91 raise dj_exc_value.with_traceback(traceback) from exc_value

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:105, in CursorWrapper._execute(self, sql, params, *ignored_wrapper_args)
    103     return self.cursor.execute(sql)
    104 else:
--> 105     return self.cursor.execute(sql, params)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/sqlite3/base.py:329, in SQLiteCursorWrapper.execute(self, query, params)
    327 param_names = list(params) if isinstance(params, Mapping) else None
    328 query = self.convert_query(query, param_names=param_names)
--> 329 return super().execute(query, params)

OperationalError: no such column: books_authors_app_author.created_cat

In [6]: b=Author.objects.get(first_name='William')
---------------------------------------------------------------------------
OperationalError                          Traceback (most recent call last)
File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:105, in CursorWrapper._execute(self, sql, params, *ignored_wrapper_args)
    104 else:
--> 105     return self.cursor.execute(sql, params)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/sqlite3/base.py:329, in SQLiteCursorWrapper.execute(self, query, params)
    328 query = self.convert_query(query, param_names=param_names)
--> 329 return super().execute(query, params)

OperationalError: no such column: books_authors_app_author.created_cat

The above exception was the direct cause of the following exception:

OperationalError                          Traceback (most recent call last)
Cell In[6], line 1
----> 1 b=Author.objects.get(first_name='William')

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/manager.py:87, in BaseManager._get_queryset_methods.<locals>.create_method.<locals>.manager_method(self, *args, **kwargs)
     85 @wraps(method)
     86 def manager_method(self, *args, **kwargs):
---> 87     return getattr(self.get_queryset(), name)(*args, **kwargs)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/query.py:645, in QuerySet.get(self, *args, **kwargs)
    643     limit = MAX_GET_RESULTS
    644     clone.query.set_limits(high=limit)
--> 645 num = len(clone)
    646 if num == 1:
    647     return clone._result_cache[0]

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/query.py:382, in QuerySet.__len__(self)
    381 def __len__(self):
--> 382     self._fetch_all()
    383     return len(self._result_cache)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/query.py:1928, in QuerySet._fetch_all(self)
   1926 def _fetch_all(self):
   1927     if self._result_cache is None:
-> 1928         self._result_cache = list(self._iterable_class(self))
   1929     if self._prefetch_related_lookups and not self._prefetch_done:
   1930         self._prefetch_related_objects()

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/query.py:91, in ModelIterable.__iter__(self)
     88 compiler = queryset.query.get_compiler(using=db)
     89 # Execute the query. This will also fill compiler.select, klass_info,
     90 # and annotations.
---> 91 results = compiler.execute_sql(
     92     chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
     93 )
     94 select, klass_info, annotation_col_map = (
     95     compiler.select,
     96     compiler.klass_info,
     97     compiler.annotation_col_map,
     98 )
     99 model_cls = klass_info["model"]

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/models/sql/compiler.py:1562, in SQLCompiler.execute_sql(self, result_type, chunked_fetch, chunk_size)
   1560     cursor = self.connection.cursor()
   1561 try:
-> 1562     cursor.execute(sql, params)
   1563 except Exception:
   1564     # Might fail for server-side cursors (e.g. connection closed)
   1565     cursor.close()

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:122, in CursorDebugWrapper.execute(self, sql, params)
    120 def execute(self, sql, params=None):
    121     with self.debug_sql(sql, params, use_last_executed_query=True):
--> 122         return super().execute(sql, params)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:79, in CursorWrapper.execute(self, sql, params)
     78 def execute(self, sql, params=None):
---> 79     return self._execute_with_wrappers(
     80         sql, params, many=False, executor=self._execute
     81     )

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:92, in CursorWrapper._execute_with_wrappers(self, sql, params, many, executor)
     90 for wrapper in reversed(self.db.execute_wrappers):
     91     executor = functools.partial(wrapper, executor)
---> 92 return executor(sql, params, many, context)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:100, in CursorWrapper._execute(self, sql, params, *ignored_wrapper_args)
     98     warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)
     99 self.db.validate_no_broken_transaction()
--> 100 with self.db.wrap_database_errors:
    101     if params is None:
    102         # params default might be backend specific.
    103         return self.cursor.execute(sql)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/utils.py:91, in DatabaseErrorWrapper.__exit__(self, exc_type, exc_value, traceback)
     89 if dj_exc_type not in (DataError, IntegrityError):
     90     self.wrapper.errors_occurred = True
---> 91 raise dj_exc_value.with_traceback(traceback) from exc_value

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/utils.py:105, in CursorWrapper._execute(self, sql, params, *ignored_wrapper_args)
    103     return self.cursor.execute(sql)
    104 else:
--> 105     return self.cursor.execute(sql, params)

File ~/Desktop/python_stack/my_environments/djangoPy3Env/lib/python3.12/site-packages/django/db/backends/sqlite3/base.py:329, in SQLiteCursorWrapper.execute(self, query, params)
    327 param_names = list(params) if isinstance(params, Mapping) else None
    328 query = self.convert_query(query, param_names=param_names)
--> 329 return super().execute(query, params)

OperationalError: no such column: books_authors_app_author.created_cat

In [7]: exit()
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro books_authors_proj % python manage.py makemigrations
No changes detected
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro books_authors_proj % python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  No migrations to apply.
(djangoPy3Env) macbookpro@Macbooks-MacBook-Pro books_authors_proj % python manage.py shell
Python 3.12.3 (v3.12.3:f6650f9ad7, Apr  9 2024, 08:18:47) [Clang 13.0.0 (clang-1300.0.29.30)]
Type 'copyright', 'credits' or 'license' for more information
IPython 8.24.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from books_authors_app.models import Book, Author

In [2]: shakespeare = Author.objects.get(first_name='William')

In [3]: shakespeare.first_name = 'Bill'

In [4]: shakespeare.save()

In [5]: jane_austen = Author.objects.get(first_name='Jane')

In [6]: java_book = Book.objects.get(title='Java')

In [7]: python_book = Book.objects.get(title='Python')

In [8]: java_book.authors.add(jane_austen)

In [9]: python_book.authors.add(jane_austen)

In [10]: emily_dickinson = Author.objects.get(first_name='Emily')

In [11]: c=Book.objects.get(title='C#')

In [12]: java_book = Book.objects.get(title='Java')

In [13]: python_book = Book.objects.get(title='Python')

In [14]: c.authors.add(emily_dickinson)

In [15]: java_book.authors.add(emily_dickinson)

In [16]: python_book.authors.add(emily_dickinson)

In [17]: fyodor_dostoevsky = Author.objects.get(first_name='Fyodor')

In [18]: php_book = Book.objects.get(title='PHP')

In [19]: ruby_book = Book.objects.get(title='Ruby')

In [20]: php_book.authors.add(fyodor_dostoevsky)

In [21]: ruby_book.authors.add(fyodor_dostoevsky)

In [22]: shakespeare = Author.objects.get(first_name='Bill')

In [23]: all_books = Book.objects.all()

In [24]: all_books.authors.add(shakespeare)
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
Cell In[24], line 1
----> 1 all_books.authors.add(shakespeare)

AttributeError: 'QuerySet' object has no attribute 'authors'

In [25]: for book in all_books:
    ...:     book.authors.add(shakespeare)
    ...: 

In [26]: python_book = Book.objects.get(title='Python')

In [27]: authors_of_python_book = python_book.authors.all()
    ...: print(authors_of_python_book)
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>, <Author: Author object (4)>]>

In [28]: python_book = Book.objects.get(title='Python')

In [29]: jane_austen = Author.objects.get(first_name='Jane')

In [30]: python_book.authors.remove(jane_austen)

In [31]: lau_tzu = Author.objects.get(first_name='Lau')

In [32]: java_book = Book.objects.get(title='Java')

In [33]: java_book.authors.add(lau_tzu)

In [34]: fyodor_dostoevsky = Author.objects.get(first_name='Fyodor')

In [35]: books_by_fyodor = fyodor_dostoevsky.book_set.all()
    ...: print(books_by_fyodor)
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
Cell In[35], line 1
----> 1 books_by_fyodor = fyodor_dostoevsky.book_set.all()
      2 print(books_by_fyodor)

AttributeError: 'Author' object has no attribute 'book_set'

In [36]: books_by_fyodor = fyodor_dostoevsky.book_set.all()
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
Cell In[36], line 1
----> 1 books_by_fyodor = fyodor_dostoevsky.book_set.all()

AttributeError: 'Author' object has no attribute 'book_set'

In [37]: books_by_fyodor = fyodor_dostoevsky.books.all()

In [38]: print(books_by_fyodor)
<QuerySet [<Book: Book object (4)>, <Book: Book object (5)>]>

In [39]: ruby_book = Book.objects.get(title='Ruby')

In [40]: authors_of_ruby_book = ruby_book.authors.all()
    ...: print(authors_of_ruby_book)
<QuerySet [<Author: Author object (3)>, <Author: Author object (4)>]>

In [41]:  fyodor_dostoevsky = Author.objects.get(first_name='Fyodor')

In [42]: : java_book = Book.objects.get(title='Java')
  Cell In[42], line 1
    : java_book = Book.objects.get(title='Java')
    ^
SyntaxError: invalid syntax


In [43]:  java_book = Book.objects.get(title='Java')

In [44]:  c=Book.objects.get(title='C#')

In [45]: c.authors.add(fyodor_dostoevsky)

In [46]: java_book.authors.add(fyodor_dostoevsky)

In [47]: 
 
 
 
 
 
